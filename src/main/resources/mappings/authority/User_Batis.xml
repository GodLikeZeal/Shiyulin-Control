<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeal.shiyulin.modules.authority.dao.UserDao">
    <!--<cache type="com.zeal.shiyulin.common.RedisCache"/>-->
    <!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 只要在对应的mapper配置文件中加入<cache />标签即可-->
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	 <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>-->
	<!-- INSERT一条Article  -->
	<!-- INSERT一条User  -->
	<insert id="insert" parameterType="com.zeal.shiyulin.modules.authority.entity.UserEntity" keyProperty="id" useGeneratedKeys="true">
    	insert into user
    	<trim prefix="(" suffix=")" suffixOverrides="," >
				id,
			userregistertime,
			updatedate,
			username,
			userpsd,
			userphonenumber,
			useremail,
			userqq,
			useropenid,
			userrole,
			userstatu,

       </trim>
       <trim prefix="values (" suffix=")" suffixOverrides="," >
    			#{id},
			#{userRegisterTime},
			#{updateDate},
			#{userName},
			#{userPsd},
			#{userPhoneNumber},
			#{userEmail},
			#{userQQ},
			#{userOpenId},
			#{userRole},
			#{userStatu},

    	</trim>
	</insert>

	<!-- User UPDATE -->
	<update id="update" parameterType="com.zeal.shiyulin.modules.authority.entity.UserEntity">
    	update user
    	 <trim prefix="set" suffixOverrides=",">
    			<if test="userRegisterTimeChanged==true">
			  userregistertime=#{userRegisterTime},
			</if>
			<if test="updateDateChanged==true">
			  updatedate=#{updateDate},
			</if>
			<if test="userNameChanged==true">
			  username=#{userName},
			</if>
			<if test="userPsdChanged==true">
			  userpsd=#{userPsd},
			</if>
			<if test="userPhoneNumberChanged==true">
			  userphonenumber=#{userPhoneNumber},
			</if>
			<if test="userEmailChanged==true">
			  useremail=#{userEmail},
			</if>
			<if test="userQQChanged==true">
			  userqq=#{userQQ},
			</if>
			<if test="userOpenIdChanged==true">
			  useropenid=#{userOpenId},
			</if>
			<if test="userRoleChanged==true">
			  userrole=#{userRole},
			</if>
			<if test="userStatuChanged==true">
			  userstatu=#{userStatu},
			</if>

            </trim>
    	where id = #{id}

    </update>

	<!-- DELETE一条User  -->
	<delete id="delete" parameterType="com.zeal.shiyulin.modules.authority.entity.UserEntity">
		delete from user t
		<include refid="whereCause"></include>
	</delete>
    <delete id="deleteById" parameterType="java.lang.String">
		delete from user
		where id = #{id}

	</delete>


	<sql id="whereCause">
		<where>
            <choose>
                <when test="islike==1">
                  <if test="id != null">
                     and t.id LIKE  CONCAT('%',#{id},'%')
                  </if>
                  <if test="userRegisterTime != null">
                     and t.userregistertime LIKE  CONCAT('%',#{userRegisterTime},'%')
                  </if>
                  <if test="updateDate != null">
                     and t.updatedate LIKE  CONCAT('%',#{updateDate},'%')
                  </if>
                  <if test="userName != null">
                     and t.username LIKE  CONCAT('%',#{userName},'%')
                  </if>
                  <if test="userPsd != null">
                     and t.userpsd LIKE  CONCAT('%',#{userPsd},'%')
                  </if>
                  <if test="userPhoneNumber != null">
                     and t.userphonenumber LIKE  CONCAT('%',#{userPhoneNumber},'%')
                  </if>
                  <if test="userEmail != null">
                     and t.useremail LIKE  CONCAT('%',#{userEmail},'%')
                  </if>
                  <if test="userQQ != null">
                     and t.userqq LIKE  CONCAT('%',#{userQQ},'%')
                  </if>
                  <if test="userOpenId != null">
                     and t.useropenid LIKE  CONCAT('%',#{userOpenId},'%')
                  </if>
                  <if test="userRole != null">
                     and t.userrole LIKE  CONCAT('%',#{userRole},'%')
                  </if>
                  <if test="userStatu != null">
                     and t.userstatu LIKE  CONCAT('%',#{userStatu},'%')
                  </if>
                </when>
                <otherwise>
                  <if test="id != null">
                      and t.id = #{id}
                  </if>
                  <if test="userRegisterTime != null">
                      and t.userregistertime = #{userRegisterTime}
                  </if>
                  <if test="updateDate != null">
                      and t.updatedate = #{updateDate}
                  </if>
                  <if test="userName != null">
                      and t.username = #{userName}
                  </if>
                  <if test="userPsd != null">
                      and t.userpsd = #{userPsd}
                  </if>
                  <if test="userPhoneNumber != null">
                      and t.userphonenumber = #{userPhoneNumber}
                  </if>
                  <if test="userEmail != null">
                      and t.useremail = #{userEmail}
                  </if>
                  <if test="userQQ != null">
                      and t.userqq = #{userQQ}
                  </if>
                  <if test="userOpenId != null">
                      and t.useropenid = #{userOpenId}
                  </if>
                  <if test="userRole != null">
                      and t.userrole = #{userRole}
                  </if>
                  <if test="userStatu != null">
                      and t.userstatu = #{userStatu}
                  </if>
                </otherwise>
            </choose>

		</where>
	</sql>

    <!-- 根据ID来查找一条User -->
    <select id="findById" parameterType="java.lang.String"
			resultType="com.zeal.shiyulin.modules.authority.entity.UserEntity">
		select * from user
		where id = #{id}

	</select>

    <!-- 根据Class来查找User -->
	<select id="findByClass" parameterType="com.zeal.shiyulin.modules.authority.entity.UserEntity"
			resultType="com.zeal.shiyulin.modules.authority.entity.UserEntity">
		select * from user t
		<include refid="whereCause"></include>
	</select>

<!-- 根据Class来分页查询查找User -->
	<select id="findByClassPaginate" parameterType="com.zeal.shiyulin.modules.authority.entity.UserEntity"
			resultType="com.zeal.shiyulin.modules.authority.entity.UserEntity">
		select * from user t
		<include refid="whereCause"></include>
		order by ${order} ${sort} limit  #{start},#{size}
	</select>

<!-- 根据Class来分页查询查找User的分页总数量 -->
	<select id="findByClassPaginateCount" parameterType="com.zeal.shiyulin.modules.authority.entity.UserEntity"
			resultType="long">
		select count(1) from user t
		<include refid="whereCause"></include>
	</select>



</mapper>